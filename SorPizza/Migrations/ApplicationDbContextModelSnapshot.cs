// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SorPizza.Data;

#nullable disable

namespace SorPizza.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SorPizza.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Традиционные пиццы",
                            Name = "Классические"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Особые рецепты",
                            Name = "Фирменные"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Для любителей остренького",
                            Name = "Острые"
                        });
                });

            modelBuilder.Entity("SorPizza.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SorPizza.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SelectedSize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SorPizza.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Томатный соус, моцарелла, базилик",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQWt2tl4rRCdXNhdwV5zC-jf9ki2Ipg_Ceh_Q&s",
                            IsAvailable = true,
                            Name = "Маргарита",
                            Price = 89.0m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Томатный соус, пепперони, моцарелла",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSn_BFLxdQLqiqJOtDwS5Jm6D2Mg2OVkMGpGw&s",
                            IsAvailable = true,
                            Name = "Пепперони",
                            Price = 99.0m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Соус альфредо, моцарелла, горгонзола, пармезан, чеддер",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSwu3kmyVWPPE6ks6GyY6P61nhueZfXkCPa6w&s",
                            IsAvailable = true,
                            Name = "Четыре сыра",
                            Price = 109.0m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Острый томатный соус, пепперони, халапеньо, красный перец",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSeRy4cMBDqKYYkzPUR-kqKsPIBqXYuCxUG_Q&s",
                            IsAvailable = true,
                            Name = "Дьябло",
                            Price = 105.0m
                        });
                });

            modelBuilder.Entity("SorPizza.Models.PizzaSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AdditionalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SizeInCm")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalPrice = 0m,
                            Name = "25 см",
                            PizzaId = 1,
                            SizeInCm = 25
                        },
                        new
                        {
                            Id = 2,
                            AdditionalPrice = 20m,
                            Name = "30 см",
                            PizzaId = 1,
                            SizeInCm = 30
                        },
                        new
                        {
                            Id = 3,
                            AdditionalPrice = 40m,
                            Name = "35 см",
                            PizzaId = 1,
                            SizeInCm = 35
                        },
                        new
                        {
                            Id = 4,
                            AdditionalPrice = 0m,
                            Name = "25 см",
                            PizzaId = 2,
                            SizeInCm = 25
                        },
                        new
                        {
                            Id = 5,
                            AdditionalPrice = 20m,
                            Name = "30 см",
                            PizzaId = 2,
                            SizeInCm = 30
                        },
                        new
                        {
                            Id = 6,
                            AdditionalPrice = 40m,
                            Name = "35 см",
                            PizzaId = 2,
                            SizeInCm = 35
                        });
                });

            modelBuilder.Entity("SorPizza.Models.OrderItem", b =>
                {
                    b.HasOne("SorPizza.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SorPizza.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("SorPizza.Models.Pizza", b =>
                {
                    b.HasOne("SorPizza.Models.Category", "Category")
                        .WithMany("Pizzas")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SorPizza.Models.PizzaSize", b =>
                {
                    b.HasOne("SorPizza.Models.Pizza", "Pizza")
                        .WithMany("Sizes")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("SorPizza.Models.Category", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("SorPizza.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SorPizza.Models.Pizza", b =>
                {
                    b.Navigation("Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
